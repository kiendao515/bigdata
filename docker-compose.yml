version: '3.6'

networks:
  bridge:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      bridge:
        aliases:
          - zookeeper

  kafka:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: 0.0.0.0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      JMX_PORT: 9999
    networks:
      bridge:
        aliases:
          - kafka
  
  kafka-manager:
    image: sheepkiller/kafka-manager:latest
    environment:
      ZK_HOSTS: "zookeeper:32181"
    ports:
      - 9000:9000
    networks:
      - bridge
  
  crawler:
    image: kiendt2001/crawler:latest
    volumes:
      - data:/app/data

  topcv-crawler:
    image: kiendt2001/topcv-crawler
    volumes:
      - data:/app/data
  
  career-builder:
    image: kiendt2001/cb-crawler:latest
    volumes:
      - data:/app/data

  kafka-producer:
    image: bigdata-project
    depends_on:
      - kafka
      - topcv-crawler
    restart: always
    environment:
      EXAMPLE_GOAL: "producer"
      EXAMPLE_KAFKA_TOPIC: "example"
      EXAMPLE_KAFKA_SERVER: "kafka:9092"
      EXAMPLE_ZOOKEEPER_SERVER: "zookeeper:32181"
      EXAMPLE_PRODUCER_INTERVAL: 100
    volumes:
      - data:/app/data
    networks:
      - bridge

  producer2:
    image: bigdata-project
    depends_on:
      - kafka
      - crawler
    environment:
      EXAMPLE_GOAL: "producer2"
      EXAMPLE_KAFKA_TOPIC: "example"
      EXAMPLE_KAFKA_SERVER: "kafka:9092"
      EXAMPLE_ZOOKEEPER_SERVER: "zookeeper:32181"
      EXAMPLE_PRODUCER_INTERVAL: 100
    volumes:
      - data:/app/data
    networks:
      - bridge

  producer3:
    image: bigdata-project
    depends_on:
      - kafka
      - crawler
    environment:
      EXAMPLE_GOAL: "producer3"
      EXAMPLE_KAFKA_TOPIC: "example"
      EXAMPLE_KAFKA_SERVER: "kafka:9092"
      EXAMPLE_ZOOKEEPER_SERVER: "zookeeper:32181"
      EXAMPLE_PRODUCER_INTERVAL: 100
    volumes:
      - data:/app/data
    networks:
      - bridge

  visualize:
    image: kiendt2001/consumer2
    restart: always

  logstash:
    image: docker.elastic.co/logstash/logstash:5.1.1
    volumes:
      - "./logstash.conf:/config-dir/logstash.conf"
    restart: always
    command: logstash -f /config-dir/logstash.conf
    ports:
      - "9600:9600"
      - "7777:7777"
    links:
      - kafka
  
  consumer1:
    image: bigdata-project
    depends_on:
       - kafka-producer
       - producer2
       - producer3
    ports:
       - 4041:4041
    environment:
      EXAMPLE_GOAL: "consumer.kafka"
      EXAMPLE_KAFKA_TOPIC: "example"
      EXAMPLE_KAFKA_SERVER: "kafka:9092"
      EXAMPLE_ZOOKEEPER_SERVER: "zookeeper:32181"
    networks:
      - bridge

  consumer2:
    image: bigdata-project
    restart: always
    depends_on:
       - kafka-producer
    ports:
       - 4040:4040
    environment:
      EXAMPLE_GOAL: "consumer.spark"
      EXAMPLE_KAFKA_TOPIC: "example"
      EXAMPLE_KAFKA_SERVER: "kafka:9092"
      EXAMPLE_ZOOKEEPER_SERVER: "zookeeper:32181"
    networks:
      - bridge

volumes:
  elasticsearch-data:
  logs:
  data:
    driver: local